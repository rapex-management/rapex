# Generated by Django 5.1.2 on 2025-09-12 18:29

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('merchants', '0003_alter_merchant_latitude_alter_merchant_longitude'),
    ]

    operations = [
        migrations.CreateModel(
            name='MerchantWallet',
            fields=[
                ('wallet_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=18, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('status', models.CharField(choices=[('active', 'Active'), ('suspended', 'Suspended'), ('frozen', 'Frozen'), ('closed', 'Closed')], default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('merchant', models.OneToOneField(db_column='merchant_id', on_delete=django.db.models.deletion.CASCADE, related_name='wallet', to='merchants.merchant')),
            ],
            options={
                'db_table': 'merchant_wallets',
            },
        ),
        migrations.CreateModel(
            name='MerchantPaymentMethod',
            fields=[
                ('payment_method_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('payment_method_type', models.CharField(choices=[('bank_account', 'Bank Account'), ('credit_card', 'Credit Card'), ('debit_card', 'Debit Card'), ('e_wallet', 'E-Wallet'), ('gcash', 'GCash'), ('paymaya', 'PayMaya'), ('paypal', 'PayPal'), ('crypto', 'Cryptocurrency')], max_length=20)),
                ('payment_details', models.JSONField(help_text='Tokenized or encrypted payment information (bank details, card tokens, etc.)')),
                ('display_name', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('expired', 'Expired'), ('blocked', 'Blocked')], default='active', max_length=20)),
                ('is_verified', models.BooleanField(default=False)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('is_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('wallet', models.ForeignKey(db_column='wallet_id', on_delete=django.db.models.deletion.CASCADE, related_name='payment_methods', to='wallets.merchantwallet')),
            ],
            options={
                'db_table': 'merchant_payment_methods',
            },
        ),
        migrations.CreateModel(
            name='MerchantWalletTransaction',
            fields=[
                ('transaction_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=18)),
                ('transaction_type', models.CharField(choices=[('deposit', 'Deposit'), ('withdrawal', 'Withdrawal'), ('refund', 'Refund'), ('commission', 'Commission'), ('penalty', 'Penalty'), ('transfer_in', 'Transfer In'), ('transfer_out', 'Transfer Out'), ('adjustment', 'Balance Adjustment')], max_length=20)),
                ('transaction_status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('reversed', 'Reversed')], default='pending', max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('reference_id', models.CharField(blank=True, max_length=100, null=True)),
                ('related_order_id', models.UUIDField(blank=True, null=True)),
                ('processed_by', models.UUIDField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('wallet', models.ForeignKey(db_column='wallet_id', on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='wallets.merchantwallet')),
            ],
            options={
                'db_table': 'merchant_wallet_transactions',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='merchantwallet',
            index=models.Index(fields=['merchant'], name='idx_wallet_merchant'),
        ),
        migrations.AddIndex(
            model_name='merchantwallet',
            index=models.Index(fields=['status'], name='idx_wallet_status'),
        ),
        migrations.AddIndex(
            model_name='merchantwallet',
            index=models.Index(fields=['created_at'], name='idx_wallet_created'),
        ),
        migrations.AddIndex(
            model_name='merchantpaymentmethod',
            index=models.Index(fields=['wallet'], name='idx_payment_wallet'),
        ),
        migrations.AddIndex(
            model_name='merchantpaymentmethod',
            index=models.Index(fields=['payment_method_type'], name='idx_payment_type'),
        ),
        migrations.AddIndex(
            model_name='merchantpaymentmethod',
            index=models.Index(fields=['status'], name='idx_payment_status'),
        ),
        migrations.AddIndex(
            model_name='merchantpaymentmethod',
            index=models.Index(fields=['is_default'], name='idx_payment_default'),
        ),
        migrations.AddIndex(
            model_name='merchantwallettransaction',
            index=models.Index(fields=['wallet'], name='idx_wtxn_wallet'),
        ),
        migrations.AddIndex(
            model_name='merchantwallettransaction',
            index=models.Index(fields=['transaction_type'], name='idx_wtxn_type'),
        ),
        migrations.AddIndex(
            model_name='merchantwallettransaction',
            index=models.Index(fields=['transaction_status'], name='idx_wtxn_status'),
        ),
        migrations.AddIndex(
            model_name='merchantwallettransaction',
            index=models.Index(fields=['timestamp'], name='idx_wtxn_timestamp'),
        ),
        migrations.AddIndex(
            model_name='merchantwallettransaction',
            index=models.Index(fields=['reference_id'], name='idx_wtxn_ref'),
        ),
    ]
